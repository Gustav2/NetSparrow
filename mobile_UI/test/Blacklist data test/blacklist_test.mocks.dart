// Mocks generated by Mockito 5.4.4 from annotations
// in my_app/test/blacklist_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:my_app/models/data_from_api.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);

  @override
  String get blacklistUrl => (super.noSuchMethod(
        Invocation.getter(#blacklistUrl),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#blacklistUrl),
        ),
      ) as String);

  @override
  String get token => (super.noSuchMethod(
        Invocation.getter(#token),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#token),
        ),
      ) as String);

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  int get key => (super.noSuchMethod(
        Invocation.getter(#key),
        returnValue: 0,
      ) as int);

  @override
  _i5.Future<bool> getStatus() => (super.noSuchMethod(
        Invocation.method(
          #getStatus,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getBlacklist() => (super.noSuchMethod(
        Invocation.method(
          #getBlacklist,
          [],
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getMyBlacklist() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMyBlacklist,
          [],
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<void> addToMyBlacklist(
    String? ip,
    String? url,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToMyBlacklist,
          [
            ip,
            url,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeFromMyBlacklist(
    String? ip,
    String? url,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromMyBlacklist,
          [
            ip,
            url,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> postSettings(Map<String, dynamic>? settings) =>
      (super.noSuchMethod(
        Invocation.method(
          #postSettings,
          [settings],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, dynamic>> getSettings() => (super.noSuchMethod(
        Invocation.method(
          #getSettings,
          [],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<int> getBlockedPackets() => (super.noSuchMethod(
        Invocation.method(
          #getBlockedPackets,
          [],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> getLatestSpeed() => (super.noSuchMethod(
        Invocation.method(
          #getLatestSpeed,
          [],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> getLatestLatency() => (super.noSuchMethod(
        Invocation.method(
          #getLatestLatency,
          [],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<List<dynamic>> getLogList() => (super.noSuchMethod(
        Invocation.method(
          #getLogList,
          [],
        ),
        returnValue: _i5.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i5.Future<List<dynamic>>);
}
